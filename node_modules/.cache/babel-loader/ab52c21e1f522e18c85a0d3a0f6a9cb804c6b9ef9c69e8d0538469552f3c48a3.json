{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { getAllProductsThunk } from \"../../redux-thunk/products-thunk/getAllProductsThunk\";\nimport { isError } from \"../../../utils/utilStore\";\nimport { isLiked } from \"../../../utils/products\";\nimport { changeLikeProductThunk } from \"../../redux-thunk/products-thunk/changeLikeProductThunk\";\nimport { SORTED } from \"../../../utils/constants\";\nconst initialState = {\n  products: [],\n  favourites: [],\n  currentSort: '',\n  total: 0,\n  isLoading: false,\n  error: null\n};\nconst productsSlice = createSlice({\n  name: 'products',\n  initialState,\n  reducers: {\n    sortedProductsState: (state, action) => {\n      switch (action.payload) {\n        case SORTED.LOW:\n          state.products = state.products.sort((a, b) => b.price - a.price);\n          state.currentSort = action.payload;\n          break;\n        case SORTED.CHEAP:\n          state.products = state.products.sort((a, b) => a.price - b.price);\n          state.currentSort = action.payload;\n          break;\n        case SORTED.SALE:\n          state.products = state.products.sort((a, b) => b.discount - a.discount);\n          state.currentSort = action.payload;\n          break;\n        default:\n          state.products = state.products.sort((a, b) => b.likes.length - a.likes.length);\n          state.currentSort = SORTED.POPULAR;\n      }\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(getAllProductsThunk.fulfilled, (state, action) => {\n      const {\n        total,\n        products,\n        currentUser\n      } = action.payload;\n      state.products = products;\n      state.favourites = products.filter(item => isLiked(item.likes, currentUser._id));\n      state.total = total;\n      state.isLoading = false;\n    });\n    builder.addCase(getAllProductsThunk.pending, state => {\n      state.error = null;\n      state.isLoading = true;\n    });\n    builder.addCase(changeLikeProductThunk.fulfilled, (state, action) => {\n      const {\n        product,\n        liked\n      } = action.payload;\n      state.products = state.products.map(cardState => {\n        return cardState._id === product._id ? product : cardState;\n      });\n      if (!liked) {\n        state.favourites.push(product);\n      } else {\n        state.favourites = state.favourites.filter(card => card._id !== product._id);\n      }\n    });\n    builder.addCase(changeLikeProductThunk.pending, state => {\n      state.error = null;\n      state.isLoading = true;\n    });\n    builder.addMatcher(isError, (state, action) => {\n      state.error = action.payload;\n      state.isLoading = false;\n    });\n  }\n});\nexport const {\n  sortedProductsState\n} = productsSlice.actions;\nexport default productsSlice.reducer;","map":{"version":3,"names":["createSlice","getAllProductsThunk","isError","isLiked","changeLikeProductThunk","SORTED","initialState","products","favourites","currentSort","total","isLoading","error","productsSlice","name","reducers","sortedProductsState","state","action","payload","LOW","sort","a","b","price","CHEAP","SALE","discount","likes","length","POPULAR","extraReducers","builder","addCase","fulfilled","currentUser","filter","item","_id","pending","product","liked","map","cardState","push","card","addMatcher","actions","reducer"],"sources":["C:/Users/User/Desktop/K.V/Education/SberUniversity/dogfood2/src/redux/redux-slice/products/productsSlice.js"],"sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\nimport {getAllProductsThunk} from \"../../redux-thunk/products-thunk/getAllProductsThunk\";\nimport {isError} from \"../../../utils/utilStore\";\nimport {isLiked} from \"../../../utils/products\";\nimport {changeLikeProductThunk} from \"../../redux-thunk/products-thunk/changeLikeProductThunk\";\nimport {SORTED} from \"../../../utils/constants\";\n\nconst initialState = {\n    products: [],\n    favourites: [],\n    currentSort: '',\n    total: 0,\n    isLoading: false,\n    error: null\n}\nconst productsSlice = createSlice({\n    name: 'products',\n    initialState,\n    reducers: {\n        sortedProductsState: (state, action) => {\n            switch (action.payload) {\n                case SORTED.LOW:\n                    state.products = state.products.sort((a, b) => b.price - a.price);\n                    state.currentSort = action.payload;\n                    break;\n                case SORTED.CHEAP:\n                    state.products = state.products.sort((a, b) => a.price - b.price);\n                    state.currentSort = action.payload;\n                    break;\n                case SORTED.SALE:\n                    state.products = state.products.sort((a, b) => b.discount - a.discount);\n                    state.currentSort = action.payload;\n                    break;\n                default:\n                    state.products = state.products.sort((a, b) => b.likes.length - a.likes.length);\n                    state.currentSort = SORTED.POPULAR;\n            }\n        }\n    },\n    extraReducers: (builder) => {\n        builder.addCase(getAllProductsThunk.fulfilled, (state, action) => {\n            const {total, products, currentUser} = action.payload;\n\n            state.products = products;\n            state.favourites = products.filter(item => isLiked(item.likes, currentUser._id));\n            state.total = total;\n            state.isLoading = false;\n        })\n\n        builder.addCase(getAllProductsThunk.pending, state => {\n            state.error = null;\n            state.isLoading = true;\n        })\n\n        builder.addCase(changeLikeProductThunk.fulfilled, (state, action) => {\n            const {product, liked} = action.payload;\n\n            state.products = state.products.map((cardState) => {\n                return cardState._id === product._id ? product : cardState;\n            })\n\n            if (!liked) {\n                state.favourites.push(product);\n            } else {\n                state.favourites = state.favourites.filter(card => card._id !== product._id);\n            }\n        })\n\n        builder.addCase(changeLikeProductThunk.pending, state => {\n            state.error = null;\n            state.isLoading = true;\n        })\n\n        builder.addMatcher(isError, (state, action) => {\n            state.error = action.payload;\n            state.isLoading = false;\n        })\n    }\n})\n\nexport const {sortedProductsState} = productsSlice.actions;\n\nexport default productsSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
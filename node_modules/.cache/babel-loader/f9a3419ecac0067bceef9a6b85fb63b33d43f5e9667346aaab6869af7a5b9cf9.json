{"ast":null,"code":"import { createAsyncThunk } from \"@reduxjs/toolkit\";\nexport const getSingleProductThunk = createAsyncThunk('singleProduct/getSingleProductThunk', async function (productId, _ref) {\n  let {\n    rejectWithValue,\n    fulfillWithValue,\n    dispatch,\n    getState,\n    extra: api\n  } = _ref;\n  try {\n    const token = localStorage.getItem('jwt');\n    const data = await api.getProductById(productId, token);\n    return fulfillWithValue(data);\n  } catch (e) {\n    return rejectWithValue(e);\n  }\n});","map":{"version":3,"names":["createAsyncThunk","getSingleProductThunk","productId","rejectWithValue","fulfillWithValue","dispatch","getState","extra","api","token","localStorage","getItem","data","getProductById","e"],"sources":["C:/Users/User/Desktop/K.V/Education/SberUniversity/dogfood2/src/redux/redux-thunk/singleProduct-thunk/getSingleProductThunk.js"],"sourcesContent":["import {createAsyncThunk} from \"@reduxjs/toolkit\";\n\nexport const getSingleProductThunk = createAsyncThunk(\n    'singleProduct/getSingleProductThunk',\n    async function (productId, {rejectWithValue, fulfillWithValue, dispatch, getState, extra: api}) {\n        try {\n            const token = localStorage.getItem('jwt');\n            const data = await api.getProductById(productId, token);\n\n            return fulfillWithValue(data);\n        } catch (e) {\n            return rejectWithValue(e);\n        }\n    })\n"],"mappings":"AAAA,SAAQA,gBAAgB,QAAO,kBAAkB;AAEjD,OAAO,MAAMC,qBAAqB,GAAGD,gBAAgB,CACjD,qCAAqC,EACrC,gBAAgBE,SAAS,QAAuE;EAAA,IAArE;IAACC,eAAe;IAAEC,gBAAgB;IAAEC,QAAQ;IAAEC,QAAQ;IAAEC,KAAK,EAAEC;EAAG,CAAC;EAC1F,IAAI;IACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,KAAK,CAAC;IACzC,MAAMC,IAAI,GAAG,MAAMJ,GAAG,CAACK,cAAc,CAACX,SAAS,EAAEO,KAAK,CAAC;IAEvD,OAAOL,gBAAgB,CAACQ,IAAI,CAAC;EACjC,CAAC,CAAC,OAAOE,CAAC,EAAE;IACR,OAAOX,eAAe,CAACW,CAAC,CAAC;EAC7B;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
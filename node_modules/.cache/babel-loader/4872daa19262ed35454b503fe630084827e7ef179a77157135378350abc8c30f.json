{"ast":null,"code":"import { createAsyncThunk } from \"@reduxjs/toolkit\";\nexport const loginThunk = createAsyncThunk('user/loginThunk', async function (dataAuth, _ref) {\n  let {\n    rejectWithValue,\n    fulfillWithValue,\n    dispatch,\n    getState,\n    extra: api\n  } = _ref;\n  try {\n    const data = await api.login(dataAuth);\n    if (data.token) {\n      localStorage.setItem('jwt', data.token);\n    } else {\n      return rejectWithValue(data);\n    }\n    return fulfillWithValue(data);\n  } catch (e) {\n    return rejectWithValue(e);\n  }\n});","map":{"version":3,"names":["createAsyncThunk","loginThunk","dataAuth","rejectWithValue","fulfillWithValue","dispatch","getState","extra","api","data","login","token","localStorage","setItem","e"],"sources":["C:/Users/User/Desktop/K.V/Education/SberUniversity/dogfood2/src/redux/redux-thunk/user-thunk/loginThunk.js"],"sourcesContent":["import {createAsyncThunk} from \"@reduxjs/toolkit\";\n\nexport const loginThunk = createAsyncThunk(\n    'user/loginThunk',\n    async function (dataAuth, {rejectWithValue, fulfillWithValue, dispatch, getState, extra: api}) {\n        try {\n            const data = await api.login(dataAuth);\n\n            if (data.token) {\n                localStorage.setItem('jwt', data.token);\n            } else {\n                return rejectWithValue(data);\n            }\n            return fulfillWithValue(data);\n        } catch (e) {\n            return rejectWithValue(e);\n        }\n    })\n"],"mappings":"AAAA,SAAQA,gBAAgB,QAAO,kBAAkB;AAEjD,OAAO,MAAMC,UAAU,GAAGD,gBAAgB,CACtC,iBAAiB,EACjB,gBAAgBE,QAAQ,QAAuE;EAAA,IAArE;IAACC,eAAe;IAAEC,gBAAgB;IAAEC,QAAQ;IAAEC,QAAQ;IAAEC,KAAK,EAAEC;EAAG,CAAC;EACzF,IAAI;IACA,MAAMC,IAAI,GAAG,MAAMD,GAAG,CAACE,KAAK,CAACR,QAAQ,CAAC;IAEtC,IAAIO,IAAI,CAACE,KAAK,EAAE;MACZC,YAAY,CAACC,OAAO,CAAC,KAAK,EAAEJ,IAAI,CAACE,KAAK,CAAC;IAC3C,CAAC,MAAM;MACH,OAAOR,eAAe,CAACM,IAAI,CAAC;IAChC;IACA,OAAOL,gBAAgB,CAACK,IAAI,CAAC;EACjC,CAAC,CAAC,OAAOK,CAAC,EAAE;IACR,OAAOX,eAAe,CAACW,CAAC,CAAC;EAC7B;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
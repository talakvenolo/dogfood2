{"ast":null,"code":"import _objectSpread from\"C:/Users/User/Desktop/K.V/Education/SberUniversity/dogfood2/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React from'react';import s from\"../RegistrationForm/RegistrationForm.module.css\";import cn from\"classnames\";import Button from\"../../Button/Button\";import{useForm}from\"react-hook-form\";import InputText from\"../../InputText/InputText\";import{Link}from\"react-router-dom\";import{REGEXP_EMAIL,REGEXP_PASSWORD,VALIDATE_MESSAGE}from\"../../../utils/constants\";import{useDispatch,useSelector}from\"react-redux\";import{loginThunk}from\"../../../redux/redux-thunk/user-thunk/loginThunk\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var LoginForm=function LoginForm(_ref){var _errors$email,_errors$password;var linkState=_ref.linkState;var _useForm=useForm({mode:'onBlur'}),register=_useForm.register,handleSubmit=_useForm.handleSubmit,errors=_useForm.formState.errors;var _useSelector=useSelector(function(state){return state.user;}),errorRedux=_useSelector.error;var dispatch=useDispatch();var onSubmit=function onSubmit(data){console.log('data-->',data);dispatch(loginThunk(data));};var emailRegister=register('email',{required:VALIDATE_MESSAGE.requiredMessage,pattern:{value:REGEXP_EMAIL,message:VALIDATE_MESSAGE.emailMessage}});var passwordRegister=register('password',{required:VALIDATE_MESSAGE.requiredMessage,pattern:{value:REGEXP_PASSWORD,message:VALIDATE_MESSAGE.passwordMessage}});return/*#__PURE__*/_jsxs(\"form\",{className:s.form,onSubmit:handleSubmit(onSubmit),children:[/*#__PURE__*/_jsx(\"h3\",{className:s.title,children:\"\\u0412\\u0445\\u043E\\u0434\"}),/*#__PURE__*/_jsx(InputText,_objectSpread(_objectSpread({},emailRegister),{},{placeholder:\"\\u0412\\u0430\\u0448 email\",errorText:(_errors$email=errors.email)===null||_errors$email===void 0?void 0:_errors$email.message})),/*#__PURE__*/_jsx(InputText,_objectSpread(_objectSpread({},passwordRegister),{},{placeholder:\"\\u0412\\u0430\\u0448 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",errorText:(_errors$password=errors.password)===null||_errors$password===void 0?void 0:_errors$password.message})),/*#__PURE__*/_jsx(Link,{to:\"/reset-password\",className:cn(s.description,s.resetPassword),state:linkState,children:\"\\u0412\\u043E\\u0441\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"}),errorRedux?/*#__PURE__*/_jsx(\"p\",{className:s.errorMessage,children:errorRedux.message}):null,/*#__PURE__*/_jsx(Button,{children:\"\\u0412\\u043E\\u0439\\u0442\\u0438\"}),/*#__PURE__*/_jsx(Button,{href:\"/registration\",linkState:linkState,look:\"secondary\",type:\"button\",children:\"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"})]});};export default LoginForm;","map":{"version":3,"names":["React","s","cn","Button","useForm","InputText","Link","REGEXP_EMAIL","REGEXP_PASSWORD","VALIDATE_MESSAGE","useDispatch","useSelector","loginThunk","LoginForm","linkState","mode","register","handleSubmit","errors","formState","state","user","errorRedux","error","dispatch","onSubmit","data","console","log","emailRegister","required","requiredMessage","pattern","value","message","emailMessage","passwordRegister","passwordMessage","form","title","email","password","description","resetPassword","errorMessage"],"sources":["C:/Users/User/Desktop/K.V/Education/SberUniversity/dogfood2/src/components/Forms/LoginForm/LoginForm.jsx"],"sourcesContent":["import React from 'react';\nimport s from \"../RegistrationForm/RegistrationForm.module.css\";\nimport cn from \"classnames\";\nimport Button from \"../../Button/Button\";\nimport {useForm} from \"react-hook-form\";\nimport InputText from \"../../InputText/InputText\";\nimport {Link} from \"react-router-dom\";\nimport {REGEXP_EMAIL, REGEXP_PASSWORD, VALIDATE_MESSAGE} from \"../../../utils/constants\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {loginThunk} from \"../../../redux/redux-thunk/user-thunk/loginThunk\";\n\nconst LoginForm = ({linkState}) => {\n    const {register, handleSubmit, formState: {errors}} = useForm({mode: 'onBlur'});\n    const {error: errorRedux} = useSelector(state => state.user);\n    const dispatch = useDispatch();\n    const onSubmit = (data) => {\n        console.log('data-->', data);\n        dispatch(loginThunk(data));\n    }\n\n    const emailRegister = register('email', {\n        required: VALIDATE_MESSAGE.requiredMessage,\n        pattern: {\n            value: REGEXP_EMAIL,\n            message: VALIDATE_MESSAGE.emailMessage\n        }\n    });\n\n    const passwordRegister = register('password', {\n        required: VALIDATE_MESSAGE.requiredMessage,\n        pattern: {\n            value: REGEXP_PASSWORD,\n            message: VALIDATE_MESSAGE.passwordMessage\n        }\n    });\n\n    return (\n        <form className={s.form} onSubmit={handleSubmit(onSubmit)}>\n            <h3 className={s.title}>Вход</h3>\n            <InputText\n                {...emailRegister}\n                placeholder=\"Ваш email\"\n                errorText={errors.email?.message}\n            />\n            <InputText\n                {...passwordRegister}\n                placeholder=\"Ваш пароль\"\n                errorText={errors.password?.message}\n            />\n            <Link\n                to=\"/reset-password\"\n                className={cn(s.description, s.resetPassword)}\n                state={linkState}\n            >Восстановить пароль</Link>\n            {errorRedux ? (\n                <p className={s.errorMessage}>{errorRedux.message}</p>\n            ) : null}\n            <Button>Войти</Button>\n            <Button href=\"/registration\"\n                    linkState={linkState}\n                    look=\"secondary\"\n                    type=\"button\"\n            >\n                Зарегистрироваться\n            </Button>\n        </form>\n    );\n};\n\nexport default LoginForm;\n"],"mappings":"gJAAA,MAAOA,MAAK,KAAM,OAAO,CACzB,MAAOC,EAAC,KAAM,iDAAiD,CAC/D,MAAOC,GAAE,KAAM,YAAY,CAC3B,MAAOC,OAAM,KAAM,qBAAqB,CACxC,OAAQC,OAAO,KAAO,iBAAiB,CACvC,MAAOC,UAAS,KAAM,2BAA2B,CACjD,OAAQC,IAAI,KAAO,kBAAkB,CACrC,OAAQC,YAAY,CAAEC,eAAe,CAAEC,gBAAgB,KAAO,0BAA0B,CACxF,OAAQC,WAAW,CAAEC,WAAW,KAAO,aAAa,CACpD,OAAQC,UAAU,KAAO,kDAAkD,CAAC,wFAE5E,GAAMC,UAAS,CAAG,QAAZA,UAAS,MAAoB,uCAAfC,UAAS,MAATA,SAAS,CACzB,aAAsDV,OAAO,CAAC,CAACW,IAAI,CAAE,QAAQ,CAAC,CAAC,CAAxEC,QAAQ,UAARA,QAAQ,CAAEC,YAAY,UAAZA,YAAY,CAAcC,MAAM,UAAlBC,SAAS,CAAGD,MAAM,CACjD,iBAA4BP,WAAW,CAAC,SAAAS,KAAK,QAAIA,MAAK,CAACC,IAAI,GAAC,CAA9CC,UAAU,cAAjBC,KAAK,CACZ,GAAMC,SAAQ,CAAGd,WAAW,EAAE,CAC9B,GAAMe,SAAQ,CAAG,QAAXA,SAAQ,CAAIC,IAAI,CAAK,CACvBC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAEF,IAAI,CAAC,CAC5BF,QAAQ,CAACZ,UAAU,CAACc,IAAI,CAAC,CAAC,CAC9B,CAAC,CAED,GAAMG,cAAa,CAAGb,QAAQ,CAAC,OAAO,CAAE,CACpCc,QAAQ,CAAErB,gBAAgB,CAACsB,eAAe,CAC1CC,OAAO,CAAE,CACLC,KAAK,CAAE1B,YAAY,CACnB2B,OAAO,CAAEzB,gBAAgB,CAAC0B,YAC9B,CACJ,CAAC,CAAC,CAEF,GAAMC,iBAAgB,CAAGpB,QAAQ,CAAC,UAAU,CAAE,CAC1Cc,QAAQ,CAAErB,gBAAgB,CAACsB,eAAe,CAC1CC,OAAO,CAAE,CACLC,KAAK,CAAEzB,eAAe,CACtB0B,OAAO,CAAEzB,gBAAgB,CAAC4B,eAC9B,CACJ,CAAC,CAAC,CAEF,mBACI,cAAM,SAAS,CAAEpC,CAAC,CAACqC,IAAK,CAAC,QAAQ,CAAErB,YAAY,CAACQ,QAAQ,CAAE,wBACtD,WAAI,SAAS,CAAExB,CAAC,CAACsC,KAAM,UAAC,0BAAI,EAAK,cACjC,KAAC,SAAS,gCACFV,aAAa,MACjB,WAAW,CAAC,0BAAW,CACvB,SAAS,gBAAEX,MAAM,CAACsB,KAAK,wCAAZ,cAAcN,OAAQ,GACnC,cACF,KAAC,SAAS,gCACFE,gBAAgB,MACpB,WAAW,CAAC,yDAAY,CACxB,SAAS,mBAAElB,MAAM,CAACuB,QAAQ,2CAAf,iBAAiBP,OAAQ,GACtC,cACF,KAAC,IAAI,EACD,EAAE,CAAC,iBAAiB,CACpB,SAAS,CAAEhC,EAAE,CAACD,CAAC,CAACyC,WAAW,CAAEzC,CAAC,CAAC0C,aAAa,CAAE,CAC9C,KAAK,CAAE7B,SAAU,UACpB,+GAAmB,EAAO,CAC1BQ,UAAU,cACP,UAAG,SAAS,CAAErB,CAAC,CAAC2C,YAAa,UAAEtB,UAAU,CAACY,OAAO,EAAK,CACtD,IAAI,cACR,KAAC,MAAM,WAAC,gCAAK,EAAS,cACtB,KAAC,MAAM,EAAC,IAAI,CAAC,eAAe,CACpB,SAAS,CAAEpB,SAAU,CACrB,IAAI,CAAC,WAAW,CAChB,IAAI,CAAC,QAAQ,UACpB,8GAED,EAAS,GACN,CAEf,CAAC,CAED,cAAeD,UAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}